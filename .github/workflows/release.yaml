name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      packages: write

    runs-on: self-hosted
    # runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Generate manifest from chart template
        shell: bash
        run: helm template --namespace girus charts/girus > manifest.yaml

      - name: Extract chart data
        shell: bash
        run: |
          echo "CHART_NAME=$(yq -r '.name' charts/girus/Chart.yaml)" >> $GITHUB_ENV
          echo "CHART_VERSION=$(yq -r '.version' charts/girus/Chart.yaml)" >> $GITHUB_ENV

      - name: Upload manifest to chart release
        shell: bash
        run: gh release upload --clobber "$CHART_NAME-$CHART_VERSION" --repo ${{ github.repository }} manifest.yaml
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  # deploy:
  #   runs-on: self-hosted
  #   needs: release

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
  #       with:
  #         fetch-depth: 0

  #     - name: Configure kubeconfig from secrets
  #       shell: bash
  #       run: echo -n "$RACKSPACE_KUBECONFIG" | base64 -d > kubeconfig.yaml
  #       env:
  #         RACKSPACE_KUBECONFIG: "${{ secrets.RACKSPACE_KUBECONFIG }}"

  #     - name: Add or force update helm repo
  #       shell: bash
  #       run: helm repo add --force-update girus https://EduardoThums-Girus-PICK.github.io/helm

  #     - name: Install or upgrade girus helm chart
  #       shell: bash
  #       run: helm --kubeconfig kubeconfig.yaml upgrade --install --namespace girus --create-namespace --set ingress.enabled=true --set ingress.external=false girus girus/girus

  #     - name: Wait until resources are deployed
  #       shell: bash
  #       run: kubectl --kubeconfig kubeconfig.yaml -n girus wait pod --all --for=condition=Ready -l app.kubernetes.io/part-of=girus --timeout 60s
